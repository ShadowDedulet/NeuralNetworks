у меня лицеи и округи

m = 2 (координаты x, y)

I = 87 (кол-во точек [лицеев])
J = 13 (кол-во кластеров [округов])

wS - матрица весов [J x [I x m]]

входы xi   = координаты i-ого лицея
нейроны Wj - координаты j-ого кластера (центра округа)

Алгоритм:
для каждого входа xi:
	считаем расстояние до каждого нейрона:
	
	// по википедии
	Pj = ||Wj||*||Wj|| + ||x||*||x|| - 2*( wS[j][0]*xi[0] + wS[j][1]*x[i][1] ) 
	||Wj|| - длина вектора = Wj[0]*Wj[0] + Wj[1]*Wj[1]

	т.к. в каждом нейроне одинаковый вход, ||xi|| выкидываем
	делим на 2 и меняем знак -> ищем не min, а max
	Pj = min ( 
		0.5*||Wj||*||Wj|| - (wS[j][0]*xi[0] + wS[j][1]*xi[1])
	)
	
	то есть Wj с расстоянием Pj - самый ближайший кластер

	выходной сигнал тогда:
	// единица в yj, остальные 0
	y = [0,0,..., 1 ,...,0,0]

	// по сути если ошибка будет, тов 2 разрядах 
	d = t - y 
	wSji[0] += d*phi*xi[0]
	wSji[1] += d*phi*xi[1]
